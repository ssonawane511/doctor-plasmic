// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2awYjQxaFuULphBNfdnqZC
// Component: fGoVKsk_ZHQf
import * as React from "react";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: 2awYjQxaFuULphBNfdnqZC/projectcss
import sty from "./PlasmicDoctorInfoCard.module.css"; // plasmic-import: fGoVKsk_ZHQf/css
import Image7Icon from "./icons/PlasmicIcon__Image7"; // plasmic-import: 1Kxn2OSTU49a/icon
import LocationIcon from "./icons/PlasmicIcon__Location"; // plasmic-import: fJXAemdXawkD/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: _66_AVX5hDA2/icon
import Clock2Icon from "./icons/PlasmicIcon__Clock2"; // plasmic-import: Wfnv6nGhvbch/icon

createPlasmicElementProxy;

export const PlasmicDoctorInfoCard__VariantProps = new Array();

export const PlasmicDoctorInfoCard__ArgProps = new Array();

const $$ = {};

function PlasmicDoctorInfoCard__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <Stack__
      as={"div"}
      data-plasmic-name={"frame36"}
      data-plasmic-override={overrides.frame36}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.frame36
      )}
    >
      <Stack__
        as={"div"}
        data-plasmic-name={"frame37"}
        data-plasmic-override={overrides.frame37}
        hasGap={true}
        className={classNames(projectcss.all, sty.frame37)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"frame38"}
          data-plasmic-override={overrides.frame38}
          hasGap={true}
          className={classNames(projectcss.all, sty.frame38)}
        >
          <div
            data-plasmic-name={"group3"}
            data-plasmic-override={overrides.group3}
            className={classNames(projectcss.all, sty.group3)}
          >
            <Image7Icon
              className={classNames(projectcss.all, sty.svg__dXkW9)}
              role={"img"}
            />

            <div
              data-plasmic-name={"maskGroup3"}
              data-plasmic-override={overrides.maskGroup3}
              className={classNames(projectcss.all, sty.maskGroup3)}
            >
              <div
                data-plasmic-name={"image10"}
                data-plasmic-override={overrides.image10}
                className={classNames(projectcss.all, sty.image10)}
              />
            </div>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"frame39"}
            data-plasmic-override={overrides.frame39}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame39)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame40"}
              data-plasmic-override={overrides.frame40}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame40)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7Ziau
                )}
              >
                {"Dr. Joseph Brostito"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uCLvn
                )}
              >
                {"Dental Specialist"}
              </div>
            </Stack__>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          data-plasmic-name={"frame41"}
          data-plasmic-override={overrides.frame41}
          hasGap={true}
          className={classNames(projectcss.all, sty.frame41)}
        >
          <div
            data-plasmic-name={"vuesaxLinearLocation3"}
            data-plasmic-override={overrides.vuesaxLinearLocation3}
            className={classNames(projectcss.all, sty.vuesaxLinearLocation3)}
          >
            <div
              data-plasmic-name={"vuesaxLinearLocation4"}
              data-plasmic-override={overrides.vuesaxLinearLocation4}
              className={classNames(projectcss.all, sty.vuesaxLinearLocation4)}
            >
              <LocationIcon
                className={classNames(projectcss.all, sty.svg__oZak)}
                role={"img"}
              />
            </div>
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__m7XOx
            )}
          >
            {"1.2 KM"}
          </div>
        </Stack__>
      </Stack__>
      <Vector2Icon
        className={classNames(projectcss.all, sty.svg___8ZCny)}
        role={"img"}
      />

      <Stack__
        as={"div"}
        data-plasmic-name={"frame42"}
        data-plasmic-override={overrides.frame42}
        hasGap={true}
        className={classNames(projectcss.all, sty.frame42)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"frame43"}
          data-plasmic-override={overrides.frame43}
          hasGap={true}
          className={classNames(projectcss.all, sty.frame43)}
        >
          <div
            data-plasmic-name={"vuesaxLinearClock7"}
            data-plasmic-override={overrides.vuesaxLinearClock7}
            className={classNames(projectcss.all, sty.vuesaxLinearClock7)}
          >
            <div
              data-plasmic-name={"vuesaxLinearClock8"}
              data-plasmic-override={overrides.vuesaxLinearClock8}
              className={classNames(projectcss.all, sty.vuesaxLinearClock8)}
            >
              <Clock2Icon
                className={classNames(projectcss.all, sty.svg__c1Uqb)}
                role={"img"}
              />
            </div>
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ww6N
            )}
          >
            {"4,8 (120 Reviews)"}
          </div>
        </Stack__>
        <Stack__
          as={"div"}
          data-plasmic-name={"frame44"}
          data-plasmic-override={overrides.frame44}
          hasGap={true}
          className={classNames(projectcss.all, sty.frame44)}
        >
          <div
            data-plasmic-name={"vuesaxLinearClock9"}
            data-plasmic-override={overrides.vuesaxLinearClock9}
            className={classNames(projectcss.all, sty.vuesaxLinearClock9)}
          >
            <div
              data-plasmic-name={"vuesaxLinearClock10"}
              data-plasmic-override={overrides.vuesaxLinearClock10}
              className={classNames(projectcss.all, sty.vuesaxLinearClock10)}
            >
              <Clock2Icon
                className={classNames(projectcss.all, sty.svg__eSt9)}
                role={"img"}
              />
            </div>
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__jUntV
            )}
          >
            {"Open at 17.00"}
          </div>
        </Stack__>
      </Stack__>
    </Stack__>
  );
}

const PlasmicDescendants = {
  frame36: [
    "frame36",
    "frame37",
    "frame38",
    "group3",
    "maskGroup3",
    "image10",
    "frame39",
    "frame40",
    "frame41",
    "vuesaxLinearLocation3",
    "vuesaxLinearLocation4",
    "frame42",
    "frame43",
    "vuesaxLinearClock7",
    "vuesaxLinearClock8",
    "frame44",
    "vuesaxLinearClock9",
    "vuesaxLinearClock10"
  ],

  frame37: [
    "frame37",
    "frame38",
    "group3",
    "maskGroup3",
    "image10",
    "frame39",
    "frame40",
    "frame41",
    "vuesaxLinearLocation3",
    "vuesaxLinearLocation4"
  ],

  frame38: ["frame38", "group3", "maskGroup3", "image10", "frame39", "frame40"],
  group3: ["group3", "maskGroup3", "image10"],
  maskGroup3: ["maskGroup3", "image10"],
  image10: ["image10"],
  frame39: ["frame39", "frame40"],
  frame40: ["frame40"],
  frame41: ["frame41", "vuesaxLinearLocation3", "vuesaxLinearLocation4"],
  vuesaxLinearLocation3: ["vuesaxLinearLocation3", "vuesaxLinearLocation4"],
  vuesaxLinearLocation4: ["vuesaxLinearLocation4"],
  frame42: [
    "frame42",
    "frame43",
    "vuesaxLinearClock7",
    "vuesaxLinearClock8",
    "frame44",
    "vuesaxLinearClock9",
    "vuesaxLinearClock10"
  ],

  frame43: ["frame43", "vuesaxLinearClock7", "vuesaxLinearClock8"],
  vuesaxLinearClock7: ["vuesaxLinearClock7", "vuesaxLinearClock8"],
  vuesaxLinearClock8: ["vuesaxLinearClock8"],
  frame44: ["frame44", "vuesaxLinearClock9", "vuesaxLinearClock10"],
  vuesaxLinearClock9: ["vuesaxLinearClock9", "vuesaxLinearClock10"],
  vuesaxLinearClock10: ["vuesaxLinearClock10"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicDoctorInfoCard__ArgProps,
          internalVariantPropNames: PlasmicDoctorInfoCard__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicDoctorInfoCard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "frame36") {
    func.displayName = "PlasmicDoctorInfoCard";
  } else {
    func.displayName = `PlasmicDoctorInfoCard.${nodeName}`;
  }
  return func;
}

export const PlasmicDoctorInfoCard = Object.assign(
  // Top-level PlasmicDoctorInfoCard renders the root element
  makeNodeComponent("frame36"),
  {
    // Helper components rendering sub-elements
    frame37: makeNodeComponent("frame37"),
    frame38: makeNodeComponent("frame38"),
    group3: makeNodeComponent("group3"),
    maskGroup3: makeNodeComponent("maskGroup3"),
    image10: makeNodeComponent("image10"),
    frame39: makeNodeComponent("frame39"),
    frame40: makeNodeComponent("frame40"),
    frame41: makeNodeComponent("frame41"),
    vuesaxLinearLocation3: makeNodeComponent("vuesaxLinearLocation3"),
    vuesaxLinearLocation4: makeNodeComponent("vuesaxLinearLocation4"),
    frame42: makeNodeComponent("frame42"),
    frame43: makeNodeComponent("frame43"),
    vuesaxLinearClock7: makeNodeComponent("vuesaxLinearClock7"),
    vuesaxLinearClock8: makeNodeComponent("vuesaxLinearClock8"),
    frame44: makeNodeComponent("frame44"),
    vuesaxLinearClock9: makeNodeComponent("vuesaxLinearClock9"),
    vuesaxLinearClock10: makeNodeComponent("vuesaxLinearClock10"),
    // Metadata about props expected for PlasmicDoctorInfoCard
    internalVariantProps: PlasmicDoctorInfoCard__VariantProps,
    internalArgProps: PlasmicDoctorInfoCard__ArgProps
  }
);

export default PlasmicDoctorInfoCard;
/* prettier-ignore-end */
